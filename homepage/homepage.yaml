apiVersion: v1
kind: Namespace
metadata:
  name: homepage-server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: homepage-config
  namespace: homepage-server
data:
  settings.yaml: |
    title: StarGate Command
    theme: dark
    background:
      image: /images/stargate.jpg   # served locally by the pod
      blur: md
      brightness: 75
      opacity: 60
    layout:
      - Network
      - Infrastructure
      - Media
      - Home
      - Cameras
      - Tools
    quicklaunch:
      searchDescriptions: true

  services.yaml: |
    - Network:
        - pfSense (HQ):
            href: https://pfsensehome.kbtech.org
            icon: pfsense
        - pfSense (NOC):
            href: https://pfsensenoc.kbtech.org
            icon: pfsense

    - Infrastructure:
        - Proxmox (HQ):
            href: https://proxmox.kbtech.org
            icon: proxmox
        - Proxmox (NOC):
            href: https://proxmox-noc.kbtech.org
            icon: proxmox
        - Proxmox (Moms):
            href: https://pvemoms.kbtech.org
            icon: proxmox
        - Unraid:
            href: https://unraid.kbtech.org
            icon: unraid
        - Tactical RMM:
            href: https://rmm.kbtech.org
            icon: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/tacticalrmm.png

    - Media:
        - Sonarr:
            href: https://sonarr.kbtech.org
            icon: sonarr
        - Radarr:
            href: https://radarr.kbtech.org
            icon: radarr
        - Overseerr:
            href: https://request.kbtech.org
            icon: overseerr

    - Home:
        - Home Assistant:
            href: https://homeassistant.kbtech.org
            icon: home-assistant

    - Cameras:
        - Blue Iris:
            href: https://blue.kbtech.org
            icon: blue-iris

  widgets.yaml: |
    - resources:
        cpu: true
        memory: true
        disk: true
    - datetime:
        text_size: xl
        format:
          timeStyle: short
          dateStyle: long
---
apiVersion: v1
kind: Service
metadata:
  name: homepage
  namespace: homepage-server
spec:
  selector:
    app: homepage
  ports:
    - name: http
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: homepage-server
  labels:
    app: homepage
spec:
  # You can scale safely; homepage is stateless.
  replicas: 2
  selector:
    matchLabels:
      app: homepage
  template:
    metadata:
      labels:
        app: homepage
    spec:
      # Download the wallpaper before the app starts; fall back if Pinterest blocks
      initContainers:
        - name: fetch-wallpaper
          image: curlimages/curl:8.10.1
          command: ["sh","-c"]
          args:
            - >
              set -eux;
              mkdir -p /images;
              UA="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0 Safari/537.36";
              # Try Pinterest (Stargate ship). If blocked/timeouts, fall back to a neutral space image.
              (curl -A "$UA" -L --retry 3 --fail --connect-timeout 10
                "https://i.pinimg.com/1200x/82/04/0c/82040c50e8c2d8dfe1485a5eb8450419.jpg"
                -o /images/stargate.jpg) \
              || (curl -L --retry 3 --fail --connect-timeout 10
                "https://images.unsplash.com/photo-1447433819943-74a20887a81e?auto=format&fit=crop&w=2560&q=80"
                -o /images/stargate.jpg);
              ls -lh /images
          volumeMounts:
            - name: wallpaper
              mountPath: /images
      containers:
        - name: homepage
          image: ghcr.io/gethomepage/homepage:v0.9.12
          imagePullPolicy: IfNotPresent
          env:
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: homepage.kbtech.org,www.homepage.kbtech.org
            - name: TZ
              value: America/Chicago
          ports:
            - name: http
              containerPort: 3000
          volumeMounts:
            - name: homepage-config
              mountPath: /app/config
            - name: logs
              mountPath: /app/config/logs
            # Homepage serves /images/* from /app/public/images
            - name: wallpaper
              mountPath: /app/public/images
          readinessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: "/", port: http }
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: homepage-config
          configMap:
            name: homepage-config
        - name: logs
          emptyDir: {}
        - name: wallpaper
          emptyDir: {}   # per-pod; fine for scaling
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: homepage
  namespace: homepage-server
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`homepage.kbtech.org`) || Host(`www.homepage.kbtech.org`)
      kind: Rule
      services:
        - name: homepage
          port: 3000
  tls:
    secretName: kbtech-tls
