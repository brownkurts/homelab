apiVersion: v1
kind: Namespace
metadata:
  name: pfsensenoc
---
apiVersion: v1
kind: Service
metadata:
  name: pfsensenoc
  namespace: pfsensenoc
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: 443
  # no selector on purpose â€“ endpoints are defined manually
---
apiVersion: v1
kind: Endpoints
metadata:
  name: pfsensenoc
  namespace: pfsensenoc
subsets:
  - addresses:
      - ip: 192.168.2.254           # pfSense LAN/WAN IP reachable from cluster
    ports:
      - name: https
        port: 443
        protocol: TCP
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: default-headers
  namespace: pfsensenoc
spec:
  headers:
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    # Traefik already sets X-Forwarded-* automatically, but this is harmless:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
---
# Optional: lock access down to your home public IP
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: allow-home
  namespace: pfsensenoc
spec:
  ipAllowList:
    sourcerange:
      - YOUR.PUBLIC.IP/32        # replace with your real public IP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: pfsensenoc
  namespace: pfsensenoc
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`pfsensenoc.kbtech.org`) || Host(`www.pfsensenoc.kbtech.org`)
      kind: Rule
      middlewares:
        - name: default-headers
        # add this line if you want the IP restriction:
        # - name: allow-home
      services:
        - name: pfsensenoc
          port: 443
          scheme: https
          passHostHeader: true
  tls:
    secretName: kbtech-tls  # must exist in namespace pfsensenoc
