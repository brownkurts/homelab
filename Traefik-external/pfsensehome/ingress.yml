apiVersion: v1
kind: Namespace
metadata:
  name: pfsensehome
---
apiVersion: v1
kind: Service
metadata:
  name: pfsensehome
  namespace: pfsensehome
spec:
  type: ClusterIP
  ports:
    - name: https
      port: 443
      targetPort: 443
  # no selector on purpose â€“ we define Endpoints via EndpointSlice
---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: pfsensehome-1
  namespace: pfsensehome
  labels:
    kubernetes.io/service-name: pfsensehome
addressType: IPv4
ports:
  - name: https
    port: 443
    protocol: TCP
endpoints:
  - addresses: ["192.168.2.254"]
    conditions: { ready: true }
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: pfsensehome-insecure
  namespace: pfsensehome
spec:
  insecureSkipVerify: true
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: default-headers
  namespace: pfsensehome
spec:
  headers:
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    customRequestHeaders:
      X-Forwarded-Proto: "https"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: pfsensehome
  namespace: pfsensehome
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints: [websecure]
  routes:
    - match: Host(`pfsensehome.kbtech.org`) || Host(`www.pfsensehome.kbtech.org`)
      kind: Rule
      middlewares:
        - name: default-headers
      services:
        - name: pfsensehome
          port: 443
          scheme: https
          serversTransport: pfsensehome-insecure
          passHostHeader: true
  tls:
    secretName: kbtech-tls
