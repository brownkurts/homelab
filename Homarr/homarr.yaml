apiVersion: apps/v1
kind: Deployment
metadata:
  name: homarr-server
  namespace: homarr-server
  labels:
    app: homarr-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: homarr-server
  template:
    metadata:
      labels:
        app: homarr-server
    spec:
      nodeSelector:
        worker: "true"               # remove if unnecessary
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: homarr-server
          image: ghcr.io/homarr-labs/homarr:0.15.2   # avoid 'latest'
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: America/Chicago
          ports:
            - name: http
              containerPort: 7575
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: homarr-content
              mountPath: /app/public/icons
              subPath: icons
            - name: homarr-content
              mountPath: /app/data/configs
              subPath: configs
            - name: homarr-content
              mountPath: /data
              subPath: data
      volumes:
        - name: homarr-content
          persistentVolumeClaim:
            claimName: homarr-claim
